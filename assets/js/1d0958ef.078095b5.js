"use strict";(self.webpackChunkagritrace_docs=self.webpackChunkagritrace_docs||[]).push([[831],{8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var i=r(6540);const s={},t=i.createContext(s);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},9887:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var i=r(4848),s=r(8453);const t={id:"Deployment",title:"Deployment Guide",sidebar_label:"\ud83d\ude80 Deployment Guide"},a="AgriTrace Deployment Guide",o={id:"Deployment",title:"Deployment Guide",description:"This guide covers the complete deployment process for AgriTrace, including mobile app deployment, backend server setup, and production environment configuration.",source:"@site/docs/Deployment.md",sourceDirName:".",slug:"/Deployment",permalink:"/AgriTrace_docs/Deployment",draft:!1,unlisted:!1,editUrl:"https://github.com/vietvo371/AgriTrace_docs/edit/main/docs/Deployment.md",tags:[],version:"current",frontMatter:{id:"Deployment",title:"Deployment Guide",sidebar_label:"\ud83d\ude80 Deployment Guide"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udc68\u200d\ud83d\udcbc Admin Guide",permalink:"/AgriTrace_docs/Guides/admin-guide"},next:{title:"\ud83e\udd1d Contributing",permalink:"/AgriTrace_docs/Contributing"}},l={},c=[{value:"\ud83d\udcf1 Mobile App Deployment",id:"-mobile-app-deployment",level:2},{value:"React Native App Store Deployment",id:"react-native-app-store-deployment",level:3},{value:"iOS App Store Deployment",id:"ios-app-store-deployment",level:4},{value:"Android Google Play Deployment",id:"android-google-play-deployment",level:4},{value:"Environment Configuration",id:"environment-configuration",level:3},{value:"Development Environment",id:"development-environment",level:4},{value:"Production Environment",id:"production-environment",level:4},{value:"\ud83d\udda5\ufe0f Backend Deployment",id:"\ufe0f-backend-deployment",level:2},{value:"Node.js/Express Server Deployment",id:"nodejsexpress-server-deployment",level:3},{value:"Heroku Deployment",id:"heroku-deployment",level:4},{value:"Vercel Deployment",id:"vercel-deployment",level:4},{value:"Database Deployment",id:"database-deployment",level:3},{value:"PostgreSQL Setup",id:"postgresql-setup",level:4},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Production Environment",id:"production-environment-1",level:4},{value:"Development Environment",id:"development-environment-1",level:4},{value:"\ud83c\udf10 Domain and SSL Setup",id:"-domain-and-ssl-setup",level:2},{value:"Domain Configuration",id:"domain-configuration",level:3},{value:"Nginx Configuration",id:"nginx-configuration",level:3},{value:"\ud83d\udd27 Production Server Setup",id:"-production-server-setup",level:2},{value:"Ubuntu Server Configuration",id:"ubuntu-server-configuration",level:3},{value:"\ud83d\udcca Monitoring and Logging",id:"-monitoring-and-logging",level:2},{value:"Application Monitoring",id:"application-monitoring",level:3},{value:"Database Monitoring",id:"database-monitoring",level:3},{value:"\ud83d\udd04 CI/CD Pipeline",id:"-cicd-pipeline",level:2},{value:"GitHub Actions Workflow",id:"github-actions-workflow",level:3},{value:"\ud83d\ude80 Performance Optimization",id:"-performance-optimization",level:2},{value:"Database Optimization",id:"database-optimization",level:3},{value:"Caching Strategy",id:"caching-strategy",level:3},{value:"\ud83d\udd12 Security Hardening",id:"-security-hardening",level:2},{value:"Security Headers",id:"security-headers",level:3},{value:"Environment Security",id:"environment-security",level:3}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"agritrace-deployment-guide",children:"AgriTrace Deployment Guide"}),"\n",(0,i.jsx)(n.p,{children:"This guide covers the complete deployment process for AgriTrace, including mobile app deployment, backend server setup, and production environment configuration."}),"\n",(0,i.jsx)(n.h2,{id:"-mobile-app-deployment",children:"\ud83d\udcf1 Mobile App Deployment"}),"\n",(0,i.jsx)(n.h3,{id:"react-native-app-store-deployment",children:"React Native App Store Deployment"}),"\n",(0,i.jsx)(n.h4,{id:"ios-app-store-deployment",children:"iOS App Store Deployment"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Prepare iOS Build"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Navigate to project directory\ncd agritrace-mobile\n\n# Install dependencies\nnpm install\n\n# Install iOS dependencies\ncd ios && pod install && cd ..\n\n# Build for production\nnpx react-native run-ios --configuration Release\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Configure App Store Connect"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'// ios/AgriTrace/Info.plist\n{\n  "CFBundleDisplayName": "AgriTrace",\n  "CFBundleIdentifier": "com.agritrace.mobile",\n  "CFBundleVersion": "1.0.0",\n  "CFBundleShortVersionString": "1.0.0",\n  "NSLocationWhenInUseUsageDescription": "AgriTrace needs location access to record farm coordinates",\n  "NSCameraUsageDescription": "AgriTrace needs camera access to scan QR codes and take product photos"\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Archive and Upload"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Open Xcode\nopen ios/AgriTrace.xcworkspace\n\n# Select Generic iOS Device\n# Product > Archive\n# Upload to App Store Connect\n"})}),"\n",(0,i.jsx)(n.h4,{id:"android-google-play-deployment",children:"Android Google Play Deployment"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Prepare Android Build"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Generate keystore for signing\nkeytool -genkey -v -keystore agritrace-release-key.keystore -alias agritrace-key-alias -keyalg RSA -keysize 2048 -validity 10000\n\n# Configure gradle.properties\necho "MYAPP_RELEASE_STORE_FILE=agritrace-release-key.keystore" >> android/gradle.properties\necho "MYAPP_RELEASE_KEY_ALIAS=agritrace-key-alias" >> android/gradle.properties\necho "MYAPP_RELEASE_STORE_PASSWORD=your_keystore_password" >> android/gradle.properties\necho "MYAPP_RELEASE_KEY_PASSWORD=your_key_password" >> android/gradle.properties\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Build Release APK"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Generate release APK\ncd android\n./gradlew assembleRelease\n\n# Generate AAB for Play Store\n./gradlew bundleRelease\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Upload to Google Play Console"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Upload AAB file to Google Play Console\n# Follow Google Play Console setup instructions\n"})}),"\n",(0,i.jsx)(n.h3,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,i.jsx)(n.h4,{id:"development-environment",children:"Development Environment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// .env.development\nAPI_BASE_URL=http://localhost:3000/api\nENVIRONMENT=development\nDEBUG=true\n"})}),"\n",(0,i.jsx)(n.h4,{id:"production-environment",children:"Production Environment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// .env.production\nAPI_BASE_URL=https://api.agritrace.vn/api\nENVIRONMENT=production\nDEBUG=false\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-backend-deployment",children:"\ud83d\udda5\ufe0f Backend Deployment"}),"\n",(0,i.jsx)(n.h3,{id:"nodejsexpress-server-deployment",children:"Node.js/Express Server Deployment"}),"\n",(0,i.jsx)(n.h4,{id:"heroku-deployment",children:"Heroku Deployment"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Prepare for Heroku"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Create Procfile\necho "web: node server.js" > Procfile\n\n# Create app.json\ncat > app.json << EOF\n{\n  "name": "agritrace-backend",\n  "description": "AgriTrace Backend API",\n  "repository": "https://github.com/vietvo371/AgriTrace",\n  "keywords": ["node", "express", "agriculture", "traceability"],\n  "env": {\n    "NODE_ENV": "production",\n    "DATABASE_URL": {\n      "description": "PostgreSQL database URL",\n      "required": true\n    },\n    "JWT_SECRET": {\n      "description": "JWT secret key",\n      "required": true,\n      "generator": "secret"\n    }\n  },\n  "addons": [\n    "heroku-postgresql:hobby-dev"\n  ]\n}\nEOF\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Deploy to Heroku"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install Heroku CLI\nnpm install -g heroku\n\n# Login to Heroku\nheroku login\n\n# Create Heroku app\nheroku create agritrace-backend\n\n# Add PostgreSQL addon\nheroku addons:create heroku-postgresql:hobby-dev\n\n# Set environment variables\nheroku config:set NODE_ENV=production\nheroku config:set JWT_SECRET=your_jwt_secret_here\n\n# Deploy\ngit push heroku main\n"})}),"\n",(0,i.jsx)(n.h4,{id:"vercel-deployment",children:"Vercel Deployment"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Configure Vercel"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'// vercel.json\n{\n  "version": 2,\n  "builds": [\n    {\n      "src": "server.js",\n      "use": "@vercel/node"\n    }\n  ],\n  "routes": [\n    {\n      "src": "/(.*)",\n      "dest": "server.js"\n    }\n  ],\n  "env": {\n    "NODE_ENV": "production",\n    "DATABASE_URL": "@database_url",\n    "JWT_SECRET": "@jwt_secret"\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Deploy to Vercel"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install Vercel CLI\nnpm install -g vercel\n\n# Deploy\nvercel --prod\n"})}),"\n",(0,i.jsx)(n.h3,{id:"database-deployment",children:"Database Deployment"}),"\n",(0,i.jsx)(n.h4,{id:"postgresql-setup",children:"PostgreSQL Setup"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Local Development Database"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Install PostgreSQL\nsudo apt-get install postgresql postgresql-contrib\n\n# Create database\nsudo -u postgres createdb agritrace_dev\n\n# Create user\nsudo -u postgres createuser agritrace_user\n\n# Grant privileges\nsudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE agritrace_dev TO agritrace_user;"\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Production Database (AWS RDS)"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create RDS instance\naws rds create-db-instance \\\n  --db-instance-identifier agritrace-prod \\\n  --db-instance-class db.t3.micro \\\n  --engine postgres \\\n  --master-username agritrace_admin \\\n  --master-user-password your_password \\\n  --allocated-storage 20 \\\n  --vpc-security-group-ids sg-xxxxxxxxx\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Database Migration"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// migrations/001_initial_schema.sql\nCREATE TABLE users (\n  id SERIAL PRIMARY KEY,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  role VARCHAR(50) NOT NULL DEFAULT 'farmer',\n  full_name VARCHAR(255) NOT NULL,\n  phone VARCHAR(20),\n  address TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE categories (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  description TEXT,\n  icon VARCHAR(100),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE batches (\n  id SERIAL PRIMARY KEY,\n  farmer_id INTEGER REFERENCES users(id),\n  product_name VARCHAR(255) NOT NULL,\n  weight DECIMAL(10,2) NOT NULL,\n  unit VARCHAR(20) NOT NULL,\n  planting_date DATE,\n  harvest_date DATE,\n  cultivation_method VARCHAR(100),\n  location_lat DECIMAL(10,8),\n  location_lng DECIMAL(11,8),\n  location_address TEXT,\n  description TEXT,\n  qr_code VARCHAR(255) UNIQUE,\n  status VARCHAR(20) DEFAULT 'active',\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(n.h4,{id:"production-environment-1",children:"Production Environment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# .env.production\nNODE_ENV=production\nPORT=3000\nDATABASE_URL=postgresql://username:password@host:port/database\nJWT_SECRET=your_super_secret_jwt_key_here\nJWT_EXPIRES_IN=7d\nCORS_ORIGIN=https://agritrace.vn\nREDIS_URL=redis://localhost:6379\nAWS_ACCESS_KEY_ID=your_aws_access_key\nAWS_SECRET_ACCESS_KEY=your_aws_secret_key\nAWS_S3_BUCKET=agritrace-uploads\n"})}),"\n",(0,i.jsx)(n.h4,{id:"development-environment-1",children:"Development Environment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# .env.development\nNODE_ENV=development\nPORT=3000\nDATABASE_URL=postgresql://localhost:5432/agritrace_dev\nJWT_SECRET=dev_secret_key\nJWT_EXPIRES_IN=7d\nCORS_ORIGIN=http://localhost:3000\nREDIS_URL=redis://localhost:6379\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-domain-and-ssl-setup",children:"\ud83c\udf10 Domain and SSL Setup"}),"\n",(0,i.jsx)(n.h3,{id:"domain-configuration",children:"Domain Configuration"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"DNS Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# A Record for API\napi.agritrace.vn -> Your server IP\n\n# CNAME for www\nwww.agritrace.vn -> agritrace.vn\n\n# A Record for main domain\nagritrace.vn -> Your server IP\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"SSL Certificate (Let's Encrypt)"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install Certbot\nsudo apt-get install certbot\n\n# Generate SSL certificate\nsudo certbot certonly --standalone -d agritrace.vn -d www.agritrace.vn -d api.agritrace.vn\n\n# Auto-renewal\nsudo crontab -e\n# Add: 0 12 * * * /usr/bin/certbot renew --quiet\n"})}),"\n",(0,i.jsx)(n.h3,{id:"nginx-configuration",children:"Nginx Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-nginx",children:"# /etc/nginx/sites-available/agritrace\nserver {\n    listen 80;\n    server_name agritrace.vn www.agritrace.vn;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name agritrace.vn www.agritrace.vn;\n\n    ssl_certificate /etc/letsencrypt/live/agritrace.vn/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/agritrace.vn/privkey.pem;\n\n    root /var/www/agritrace;\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n\n    location /api {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-production-server-setup",children:"\ud83d\udd27 Production Server Setup"}),"\n",(0,i.jsx)(n.h3,{id:"ubuntu-server-configuration",children:"Ubuntu Server Configuration"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Initial Server Setup"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Update system\nsudo apt update && sudo apt upgrade -y\n\n# Install Node.js\ncurl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# Install PM2\nsudo npm install -g pm2\n\n# Install Nginx\nsudo apt install nginx -y\n\n# Install Redis\nsudo apt install redis-server -y\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Firewall Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Configure UFW\nsudo ufw allow OpenSSH\nsudo ufw allow 'Nginx Full'\nsudo ufw allow 3000\nsudo ufw enable\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"PM2 Process Management"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create ecosystem file\ncat > ecosystem.config.js << EOF\nmodule.exports = {\n  apps: [{\n    name: 'agritrace-api',\n    script: 'server.js',\n    instances: 'max',\n    exec_mode: 'cluster',\n    env: {\n      NODE_ENV: 'production',\n      PORT: 3000\n    },\n    error_file: './logs/err.log',\n    out_file: './logs/out.log',\n    log_file: './logs/combined.log',\n    time: true\n  }]\n}\nEOF\n\n# Start application\npm2 start ecosystem.config.js\npm2 save\npm2 startup\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-monitoring-and-logging",children:"\ud83d\udcca Monitoring and Logging"}),"\n",(0,i.jsx)(n.h3,{id:"application-monitoring",children:"Application Monitoring"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"PM2 Monitoring"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Monitor application\npm2 monit\n\n# View logs\npm2 logs agritrace-api\n\n# Restart application\npm2 restart agritrace-api\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Nginx Logs"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Access logs\nsudo tail -f /var/log/nginx/access.log\n\n# Error logs\nsudo tail -f /var/log/nginx/error.log\n"})}),"\n",(0,i.jsx)(n.h3,{id:"database-monitoring",children:"Database Monitoring"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Check database connections\nSELECT count(*) FROM pg_stat_activity;\n\n-- Check slow queries\nSELECT query, mean_time, calls \nFROM pg_stat_statements \nORDER BY mean_time DESC \nLIMIT 10;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-cicd-pipeline",children:"\ud83d\udd04 CI/CD Pipeline"}),"\n",(0,i.jsx)(n.h3,{id:"github-actions-workflow",children:"GitHub Actions Workflow"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/deploy.yml\nname: Deploy to Production\n\non:\n  push:\n    branches: [ main ]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    \n    steps:\n    - uses: actions/checkout@v2\n    \n    - name: Setup Node.js\n      uses: actions/setup-node@v2\n      with:\n        node-version: '18'\n        \n    - name: Install dependencies\n      run: npm install\n      \n    - name: Run tests\n      run: npm test\n      \n    - name: Deploy to server\n      uses: appleboy/ssh-action@v0.1.4\n      with:\n        host: ${{ secrets.HOST }}\n        username: ${{ secrets.USERNAME }}\n        key: ${{ secrets.KEY }}\n        script: |\n          cd /var/www/agritrace\n          git pull origin main\n          npm install\n          pm2 restart agritrace-api\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-performance-optimization",children:"\ud83d\ude80 Performance Optimization"}),"\n",(0,i.jsx)(n.h3,{id:"database-optimization",children:"Database Optimization"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Create indexes for better performance\nCREATE INDEX idx_batches_farmer_id ON batches(farmer_id);\nCREATE INDEX idx_batches_status ON batches(status);\nCREATE INDEX idx_batches_created_at ON batches(created_at);\nCREATE INDEX idx_reviews_batch_id ON reviews(batch_id);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"caching-strategy",children:"Caching Strategy"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Redis caching implementation\nconst redis = require('redis');\nconst client = redis.createClient(process.env.REDIS_URL);\n\nconst cacheMiddleware = (duration) => {\n  return (req, res, next) => {\n    const key = `cache:${req.originalUrl}`;\n    \n    client.get(key, (err, data) => {\n      if (data) {\n        return res.json(JSON.parse(data));\n      }\n      \n      res.sendResponse = res.json;\n      res.json = (body) => {\n        client.setex(key, duration, JSON.stringify(body));\n        res.sendResponse(body);\n      };\n      next();\n    });\n  };\n};\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-security-hardening",children:"\ud83d\udd12 Security Hardening"}),"\n",(0,i.jsx)(n.h3,{id:"security-headers",children:"Security Headers"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Security middleware\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: ["\'self\'"],\n      styleSrc: ["\'self\'", "\'unsafe-inline\'"],\n      scriptSrc: ["\'self\'"],\n      imgSrc: ["\'self\'", "data:", "https:"],\n    },\n  },\n}));\n\napp.use(rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100 // limit each IP to 100 requests per windowMs\n}));\n'})}),"\n",(0,i.jsx)(n.h3,{id:"environment-security",children:"Environment Security"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Secure environment variables\nexport NODE_ENV=production\nexport JWT_SECRET=$(openssl rand -base64 32)\nexport DATABASE_URL=postgresql://user:pass@host:port/db?sslmode=require\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Follow this deployment guide to successfully deploy AgriTrace to production environments."})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);