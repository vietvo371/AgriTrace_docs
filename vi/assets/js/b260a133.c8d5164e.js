"use strict";(self.webpackChunkagritrace_docs=self.webpackChunkagritrace_docs||[]).push([[41],{6484:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=t(4848),a=t(8453);const r={id:"Contributing",title:"Contributing to AgriTrace",sidebar_label:"\ud83e\udd1d Contributing"},s="Contributing to AgriTrace",o={id:"Contributing",title:"Contributing to AgriTrace",description:"Thank you for your interest in contributing to AgriTrace! This guide will help you get started with development and understand our contribution process.",source:"@site/docs/Contributing.md",sourceDirName:".",slug:"/Contributing",permalink:"/AgriTrace_docs/vi/Contributing",draft:!1,unlisted:!1,editUrl:"https://github.com/vietvo371/AgriTrace_docs/edit/main/docs/Contributing.md",tags:[],version:"current",frontMatter:{id:"Contributing",title:"Contributing to AgriTrace",sidebar_label:"\ud83e\udd1d Contributing"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\ude80 Deployment Guide",permalink:"/AgriTrace_docs/vi/Deployment"},next:{title:"License",permalink:"/AgriTrace_docs/vi/License"}},l={},c=[{value:"\ud83c\udf1f How to Contribute",id:"-how-to-contribute",level:2},{value:"Types of Contributions",id:"types-of-contributions",level:3},{value:"\ud83d\ude80 Development Setup",id:"-development-setup",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Local Development Environment",id:"local-development-environment",level:3},{value:"\ud83d\udccb Development Guidelines",id:"-development-guidelines",level:2},{value:"Code Style and Standards",id:"code-style-and-standards",level:3},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:4},{value:"Code Style Rules",id:"code-style-rules",level:4},{value:"React Native Guidelines",id:"react-native-guidelines",level:4},{value:"Database Guidelines",id:"database-guidelines",level:4},{value:"Git Workflow",id:"git-workflow",level:3},{value:"Branch Naming Convention",id:"branch-naming-convention",level:4},{value:"Commit Message Format",id:"commit-message-format",level:4},{value:"Pull Request Process",id:"pull-request-process",level:4},{value:"Pull Request Template",id:"pull-request-template",level:3},{value:"\ud83e\uddea Testing Guidelines",id:"-testing-guidelines",level:2},{value:"Unit Testing",id:"unit-testing",level:3},{value:"Integration Testing",id:"integration-testing",level:3},{value:"End-to-End Testing",id:"end-to-end-testing",level:3},{value:"\ud83d\udcda Documentation Standards",id:"-documentation-standards",level:2},{value:"Code Documentation",id:"code-documentation",level:3},{value:"API Documentation",id:"api-documentation",level:3},{value:"\ud83c\udf10 Localization Guidelines",id:"-localization-guidelines",level:2},{value:"Vietnamese Translation",id:"vietnamese-translation",level:3},{value:"Adding New Languages",id:"adding-new-languages",level:3},{value:"\ud83d\udd12 Security Guidelines",id:"-security-guidelines",level:2},{value:"Input Validation",id:"input-validation",level:3},{value:"Authentication &amp; Authorization",id:"authentication--authorization",level:3},{value:"\ud83d\udcde Getting Help",id:"-getting-help",level:2},{value:"Communication Channels",id:"communication-channels",level:3},{value:"Before Asking for Help",id:"before-asking-for-help",level:3},{value:"Issue Templates",id:"issue-templates",level:3},{value:"Bug Report Template",id:"bug-report-template",level:4},{value:"\ud83c\udf89 Recognition",id:"-recognition",level:2},{value:"Contributors Hall of Fame",id:"contributors-hall-of-fame",level:3},{value:"Getting Your Name Added",id:"getting-your-name-added",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"contributing-to-agritrace",children:"Contributing to AgriTrace"}),"\n",(0,i.jsx)(n.p,{children:"Thank you for your interest in contributing to AgriTrace! This guide will help you get started with development and understand our contribution process."}),"\n",(0,i.jsx)(n.h2,{id:"-how-to-contribute",children:"\ud83c\udf1f How to Contribute"}),"\n",(0,i.jsx)(n.h3,{id:"types-of-contributions",children:"Types of Contributions"}),"\n",(0,i.jsx)(n.p,{children:"We welcome various types of contributions:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udc1b Bug Reports"}),": Help us identify and fix issues"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u2728 Feature Requests"}),": Suggest new features and improvements"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udcdd Documentation"}),": Improve our documentation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udcbb Code Contributions"}),": Submit pull requests with code changes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83c\udfa8 UI/UX Improvements"}),": Enhance the user interface"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83c\udf10 Localization"}),": Help translate to Vietnamese or other languages"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83e\uddea Testing"}),": Write tests and improve test coverage"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-development-setup",children:"\ud83d\ude80 Development Setup"}),"\n",(0,i.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"Before you start contributing, make sure you have the following installed:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node.js"})," (v18 or higher)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"npm"})," or ",(0,i.jsx)(n.strong,{children:"yarn"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Git"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PostgreSQL"})," (for database)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React Native CLI"})," (for mobile development)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Android Studio"})," (for Android development)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Xcode"})," (for iOS development, macOS only)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"local-development-environment",children:"Local Development Environment"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Clone the Repository"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Clone the main repository\ngit clone https://github.com/vietvo371/AgriTraceApp.git\ncd AgriTrace\n\n# Fork the repository on GitHub first, then clone your fork\ngit clone https://github.com/YOUR_USERNAME/AgriTrace.git\ncd AgriTrace\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Install Dependencies"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install backend dependencies\ncd backend\nnpm install\n\n# Install mobile app dependencies\ncd ../mobile\nnpm install\n\n# Install web dashboard dependencies\ncd ../web\nnpm install\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Database Setup"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create database\ncreatedb agritrace_dev\n\n# Run migrations\ncd backend\nnpm run migrate\n\n# Seed database with sample data\nnpm run seed\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Environment Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Backend environment\ncp backend/.env.example backend/.env\n# Edit backend/.env with your configuration\n\n# Mobile app environment\ncp mobile/.env.example mobile/.env\n# Edit mobile/.env with your configuration\n\n# Web dashboard environment\ncp web/.env.example web/.env\n# Edit web/.env with your configuration\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Start Development Servers"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start backend server\ncd backend\nnpm run dev\n\n# Start mobile app (in new terminal)\ncd mobile\nnpx react-native run-android  # or run-ios\n\n# Start web dashboard (in new terminal)\ncd web\nnpm start\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-development-guidelines",children:"\ud83d\udccb Development Guidelines"}),"\n",(0,i.jsx)(n.h3,{id:"code-style-and-standards",children:"Code Style and Standards"}),"\n",(0,i.jsx)(n.h4,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,i.jsx)(n.p,{children:"We use ESLint and Prettier for code formatting:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install development dependencies\nnpm install --save-dev eslint prettier @typescript-eslint/parser @typescript-eslint/eslint-plugin\n\n# Run linting\nnpm run lint\n\n# Fix linting issues\nnpm run lint:fix\n\n# Format code\nnpm run format\n"})}),"\n",(0,i.jsx)(n.h4,{id:"code-style-rules",children:"Code Style Rules"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Use meaningful variable names\nconst productBatch = await createBatch(batchData); // \u2705 Good\nconst pb = await createBatch(batchData); // \u274c Bad\n\n// Use async/await instead of promises\nconst result = await api.getData(); // \u2705 Good\napi.getData().then(result => {}); // \u274c Bad\n\n// Use TypeScript interfaces\ninterface BatchData {\n  productName: string;\n  weight: number;\n  unit: string;\n  harvestDate: Date;\n}\n\n// Use proper error handling\ntry {\n  const result = await riskyOperation();\n  return result;\n} catch (error) {\n  console.error('Operation failed:', error);\n  throw new Error('Failed to perform operation');\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"react-native-guidelines",children:"React Native Guidelines"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Use functional components with hooks\nimport React, { useState, useEffect } from 'react';\n\nconst BatchListScreen = () => {\n  const [batches, setBatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadBatches();\n  }, []);\n\n  const loadBatches = async () => {\n    try {\n      setLoading(true);\n      const data = await api.getBatches();\n      setBatches(data);\n    } catch (error) {\n      console.error('Failed to load batches:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {loading ? (\n        <ActivityIndicator size=\"large\" />\n      ) : (\n        <FlatList\n          data={batches}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => <BatchItem batch={item} />}\n        />\n      )}\n    </View>\n  );\n};\n"})}),"\n",(0,i.jsx)(n.h4,{id:"database-guidelines",children:"Database Guidelines"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Use meaningful table and column names\nCREATE TABLE product_batches (\n  id SERIAL PRIMARY KEY,\n  farmer_id INTEGER NOT NULL,\n  product_name VARCHAR(255) NOT NULL,\n  weight DECIMAL(10,2) NOT NULL,\n  harvest_date DATE NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Add proper indexes\nCREATE INDEX idx_product_batches_farmer_id ON product_batches(farmer_id);\nCREATE INDEX idx_product_batches_created_at ON product_batches(created_at);\n\n-- Use foreign key constraints\nALTER TABLE product_batches \nADD CONSTRAINT fk_product_batches_farmer \nFOREIGN KEY (farmer_id) REFERENCES users(id);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"git-workflow",children:"Git Workflow"}),"\n",(0,i.jsx)(n.h4,{id:"branch-naming-convention",children:"Branch Naming Convention"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Feature branches\ngit checkout -b feature/qr-code-generation\ngit checkout -b feature/user-authentication\n\n# Bug fix branches\ngit checkout -b fix/login-validation-error\ngit checkout -b fix/qr-scan-crash\n\n# Documentation branches\ngit checkout -b docs/api-documentation\ngit checkout -b docs/installation-guide\n"})}),"\n",(0,i.jsx)(n.h4,{id:"commit-message-format",children:"Commit Message Format"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Use conventional commit format\ngit commit -m "feat: add QR code generation functionality"\ngit commit -m "fix: resolve login validation issue"\ngit commit -m "docs: update API documentation"\ngit commit -m "test: add unit tests for batch creation"\ngit commit -m "refactor: improve error handling in API"\n\n# Commit types:\n# feat: new feature\n# fix: bug fix\n# docs: documentation changes\n# style: formatting changes\n# refactor: code refactoring\n# test: adding tests\n# chore: maintenance tasks\n'})}),"\n",(0,i.jsx)(n.h4,{id:"pull-request-process",children:"Pull Request Process"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Create a Feature Branch"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git checkout main\ngit pull origin main\ngit checkout -b feature/your-feature-name\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Make Your Changes"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Make your code changes\n# Write tests for new functionality\n# Update documentation if needed\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Test Your Changes"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Run tests\nnpm test\n\n# Run linting\nnpm run lint\n\n# Build the project\nnpm run build\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Commit Your Changes"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'git add .\ngit commit -m "feat: add your feature description"\ngit push origin feature/your-feature-name\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Create Pull Request"})}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Go to GitHub and create a pull request"}),"\n",(0,i.jsx)(n.li,{children:"Fill out the pull request template"}),"\n",(0,i.jsx)(n.li,{children:"Request reviews from maintainers"}),"\n",(0,i.jsx)(n.li,{children:"Address any feedback and make changes"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pull-request-template",children:"Pull Request Template"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"## Description\nBrief description of the changes made.\n\n## Type of Change\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] Documentation update\n\n## Testing\n- [ ] My code follows the style guidelines of this project\n- [ ] I have performed a self-review of my own code\n- [ ] I have commented my code, particularly in hard-to-understand areas\n- [ ] I have made corresponding changes to the documentation\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] New and existing unit tests pass locally with my changes\n\n## Screenshots (if applicable)\nAdd screenshots to help explain your changes.\n\n## Checklist\n- [ ] I have read the [Contributing Guidelines](CONTRIBUTING.md)\n- [ ] My code follows the project's coding standards\n- [ ] I have tested my changes thoroughly\n- [ ] I have updated the documentation accordingly\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-testing-guidelines",children:"\ud83e\uddea Testing Guidelines"}),"\n",(0,i.jsx)(n.h3,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Example test for batch creation\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport CreateBatchScreen from '../CreateBatchScreen';\n\ndescribe('CreateBatchScreen', () => {\n  it('should create a new batch successfully', async () => {\n    const mockCreateBatch = jest.fn().mockResolvedValue({ id: 1 });\n    \n    const { getByPlaceholderText, getByText } = render(\n      <CreateBatchScreen createBatch={mockCreateBatch} />\n    );\n\n    fireEvent.changeText(getByPlaceholderText('Product Name'), 'Mango');\n    fireEvent.changeText(getByPlaceholderText('Weight'), '20');\n    fireEvent.press(getByText('Create Batch'));\n\n    await waitFor(() => {\n      expect(mockCreateBatch).toHaveBeenCalledWith({\n        productName: 'Mango',\n        weight: 20\n      });\n    });\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"integration-testing",children:"Integration Testing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Example API integration test\ndescribe('Batch API', () => {\n  it('should create a batch via API', async () => {\n    const batchData = {\n      productName: 'Mango',\n      weight: 20,\n      unit: 'kg',\n      harvestDate: '2024-06-20'\n    };\n\n    const response = await request(app)\n      .post('/api/batches')\n      .send(batchData)\n      .expect(201);\n\n    expect(response.body).toHaveProperty('id');\n    expect(response.body.productName).toBe('Mango');\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"end-to-end-testing",children:"End-to-End Testing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Example E2E test with Detox\ndescribe('Batch Creation Flow', () => {\n  it('should create a batch and generate QR code', async () => {\n    await device.launchApp();\n    \n    // Login\n    await element(by.id('email-input')).typeText('farmer@example.com');\n    await element(by.id('password-input')).typeText('password123');\n    await element(by.id('login-button')).tap();\n    \n    // Navigate to create batch\n    await element(by.id('create-batch-tab')).tap();\n    \n    // Fill batch form\n    await element(by.id('product-name-input')).typeText('Mango');\n    await element(by.id('weight-input')).typeText('20');\n    await element(by.id('create-batch-button')).tap();\n    \n    // Verify QR code generation\n    await expect(element(by.id('qr-code-image'))).toBeVisible();\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-documentation-standards",children:"\ud83d\udcda Documentation Standards"}),"\n",(0,i.jsx)(n.h3,{id:"code-documentation",children:"Code Documentation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"/**\n * Creates a new product batch for a farmer\n * @param {Object} batchData - The batch data\n * @param {string} batchData.productName - Name of the product\n * @param {number} batchData.weight - Weight of the batch\n * @param {string} batchData.unit - Unit of measurement (kg, ton, etc.)\n * @param {Date} batchData.harvestDate - Date of harvest\n * @param {string} batchData.cultivationMethod - Method of cultivation\n * @param {Object} batchData.location - GPS coordinates\n * @param {number} batchData.location.latitude - Latitude\n * @param {number} batchData.location.longitude - Longitude\n * @returns {Promise<Object>} The created batch with QR code\n * @throws {Error} If batch creation fails\n */\nconst createBatch = async (batchData) => {\n  // Implementation\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"api-documentation",children:"API Documentation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"/**\n * @api {post} /api/batches Create Batch\n * @apiName CreateBatch\n * @apiGroup Batches\n * @apiVersion 1.0.0\n *\n * @apiParam {String} productName Product name\n * @apiParam {Number} weight Weight of the batch\n * @apiParam {String} unit Unit of measurement\n * @apiParam {Date} harvestDate Harvest date\n * @apiParam {String} cultivationMethod Cultivation method\n * @apiParam {Object} location GPS coordinates\n * @apiParam {Number} location.latitude Latitude\n * @apiParam {Number} location.longitude Longitude\n *\n * @apiSuccess {Number} id Batch ID\n * @apiSuccess {String} qrCode QR code data\n * @apiSuccess {Date} createdAt Creation timestamp\n *\n * @apiError {Object} 400 Bad Request\n * @apiError {Object} 401 Unauthorized\n * @apiError {Object} 500 Internal Server Error\n */\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-localization-guidelines",children:"\ud83c\udf10 Localization Guidelines"}),"\n",(0,i.jsx)(n.h3,{id:"vietnamese-translation",children:"Vietnamese Translation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Translation file structure\nconst viTranslations = {\n  common: {\n    save: 'L\u01b0u',\n    cancel: 'H\u1ee7y',\n    delete: 'X\xf3a',\n    edit: 'S\u1eeda',\n    create: 'T\u1ea1o m\u1edbi'\n  },\n  batches: {\n    create: 'T\u1ea1o l\xf4 s\u1ea3n ph\u1ea9m',\n    productName: 'T\xean s\u1ea3n ph\u1ea9m',\n    weight: 'Tr\u1ecdng l\u01b0\u1ee3ng',\n    harvestDate: 'Ng\xe0y thu ho\u1ea1ch',\n    cultivationMethod: 'Ph\u01b0\u01a1ng ph\xe1p canh t\xe1c'\n  },\n  qr: {\n    scan: 'Qu\xe9t m\xe3 QR',\n    generate: 'T\u1ea1o m\xe3 QR',\n    download: 'T\u1ea3i xu\u1ed1ng'\n  }\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"adding-new-languages",children:"Adding New Languages"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create translation files in ",(0,i.jsx)(n.code,{children:"src/locales/"})]}),"\n",(0,i.jsx)(n.li,{children:"Add language to the language selector"}),"\n",(0,i.jsx)(n.li,{children:"Update the i18n configuration"}),"\n",(0,i.jsx)(n.li,{children:"Test all translations thoroughly"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-security-guidelines",children:"\ud83d\udd12 Security Guidelines"}),"\n",(0,i.jsx)(n.h3,{id:"input-validation",children:"Input Validation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Always validate user input\nconst validateBatchData = (data) => {\n  const errors = [];\n  \n  if (!data.productName || data.productName.trim().length === 0) {\n    errors.push('Product name is required');\n  }\n  \n  if (!data.weight || data.weight <= 0) {\n    errors.push('Weight must be greater than 0');\n  }\n  \n  if (!data.harvestDate) {\n    errors.push('Harvest date is required');\n  }\n  \n  return errors;\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"authentication--authorization",children:"Authentication & Authorization"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Always verify user permissions\nconst requireAuth = (req, res, next) => {\n  const token = req.headers.authorization?.split(' ')[1];\n  \n  if (!token) {\n    return res.status(401).json({ error: 'Access token required' });\n  }\n  \n  try {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    req.user = decoded;\n    next();\n  } catch (error) {\n    return res.status(401).json({ error: 'Invalid token' });\n  }\n};\n\nconst requireRole = (role) => {\n  return (req, res, next) => {\n    if (req.user.role !== role) {\n      return res.status(403).json({ error: 'Insufficient permissions' });\n    }\n    next();\n  };\n};\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-getting-help",children:"\ud83d\udcde Getting Help"}),"\n",(0,i.jsx)(n.h3,{id:"communication-channels",children:"Communication Channels"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitHub Issues"}),": For bug reports and feature requests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitHub Discussions"}),": For general questions and discussions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Email"}),": ",(0,i.jsx)(n.a,{href:"mailto:vietvo371@gmail.com",children:"vietvo371@gmail.com"})," for direct contact"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vietnamese Support"}),": Support available in Vietnamese"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"before-asking-for-help",children:"Before Asking for Help"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check the Documentation"}),": Read through the docs first"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Search Existing Issues"}),": Check if your question has been answered"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Provide Context"}),": Include relevant code, error messages, and environment details"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Be Specific"}),": Describe exactly what you're trying to do and what's not working"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"issue-templates",children:"Issue Templates"}),"\n",(0,i.jsx)(n.h4,{id:"bug-report-template",children:"Bug Report Template"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"## Bug Description\nClear and concise description of the bug.\n\n## Steps to Reproduce\n1. Go to '...'\n2. Click on '...'\n3. Scroll down to '...'\n4. See error\n\n## Expected Behavior\nWhat you expected to happen.\n\n## Actual Behavior\nWhat actually happened.\n\n## Environment\n- OS: [e.g. iOS, Android, Windows]\n- Browser: [e.g. Chrome, Safari]\n- Version: [e.g. 22]\n\n## Additional Context\nAdd any other context about the problem here.\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-recognition",children:"\ud83c\udf89 Recognition"}),"\n",(0,i.jsx)(n.h3,{id:"contributors-hall-of-fame",children:"Contributors Hall of Fame"}),"\n",(0,i.jsx)(n.p,{children:"We recognize and appreciate all contributors:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Code Contributors"}),": Listed in GitHub contributors"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation Contributors"}),": Help improve our docs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bug Reporters"}),": Help identify and fix issues"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Feature Requesters"}),": Help shape the product direction"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"getting-your-name-added",children:"Getting Your Name Added"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Make a significant contribution (code, docs, or testing)"}),"\n",(0,i.jsx)(n.li,{children:"Follow the contribution guidelines"}),"\n",(0,i.jsx)(n.li,{children:"Maintain a positive and collaborative attitude"}),"\n",(0,i.jsx)(n.li,{children:"Help other contributors"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Thank you for contributing to AgriTrace! Your contributions help make agricultural traceability accessible to Vietnamese farmers."})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6540);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);